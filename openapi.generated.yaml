{
  "openapi": "3.0.3",
  "info": {
    "title": "Ent Schema API",
    "description": "This is an auto generated API description made out of an Ent schema definition",
    "version": "0.1.0"
  },
  "paths": {
    "/banks": {
      "get": {
        "tags": [
          "Bank"
        ],
        "summary": "List Banks",
        "description": "List Banks.",
        "operationId": "listBank",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer",
              "maximum": 255,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result Bank list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BankList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "tags": [
          "Bank"
        ],
        "summary": "Create a new Bank",
        "description": "Creates a new Bank and persists it to storage.",
        "operationId": "createBank",
        "requestBody": {
          "description": "Bank to create",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "website": {
                    "type": "string"
                  },
                  "logo_url": {
                    "type": "string"
                  },
                  "currency_rates": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "offers": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                },
                "required": [
                  "name",
                  "country"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Bank created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankCreate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/banks/{id}": {
      "get": {
        "tags": [
          "Bank"
        ],
        "summary": "Find a Bank by ID",
        "description": "Finds the Bank with the requested ID and returns it.",
        "operationId": "readBank",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Bank",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Bank with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "tags": [
          "Bank"
        ],
        "summary": "Deletes a Bank by ID",
        "description": "Deletes the Bank with the requested ID.",
        "operationId": "deleteBank",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Bank",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Bank with requested ID was deleted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "patch": {
        "tags": [
          "Bank"
        ],
        "summary": "Updates a Bank",
        "description": "Updates a Bank and persists changes to storage.",
        "operationId": "updateBank",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Bank",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Bank properties to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "website": {
                    "type": "string"
                  },
                  "logo_url": {
                    "type": "string"
                  },
                  "currency_rates": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "offers": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Bank updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankUpdate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/banks/{id}/currency-rates": {
      "get": {
        "tags": [
          "Bank"
        ],
        "summary": "List attached CurrencyRates",
        "description": "List attached CurrencyRates.",
        "operationId": "listBankCurrencyRates",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Bank",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result Banks list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bank_CurrencyRatesList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/banks/{id}/offers": {
      "get": {
        "tags": [
          "Bank"
        ],
        "summary": "List attached Offers",
        "description": "List attached Offers.",
        "operationId": "listBankOffers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Bank",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result Banks list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bank_OffersList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/currency-rates": {
      "get": {
        "tags": [
          "CurrencyRate"
        ],
        "summary": "List CurrencyRates",
        "description": "List CurrencyRates.",
        "operationId": "listCurrencyRate",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer",
              "maximum": 255,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result CurrencyRate list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CurrencyRateList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "tags": [
          "CurrencyRate"
        ],
        "summary": "Create a new CurrencyRate",
        "description": "Creates a new CurrencyRate and persists it to storage.",
        "operationId": "createCurrencyRate",
        "requestBody": {
          "description": "CurrencyRate to create",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "currency": {
                    "type": "string"
                  },
                  "rate": {
                    "type": "number",
                    "format": "double"
                  },
                  "bank": {
                    "type": "integer"
                  }
                },
                "required": [
                  "currency",
                  "rate",
                  "bank"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "CurrencyRate created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyRateCreate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/currency-rates/{id}": {
      "get": {
        "tags": [
          "CurrencyRate"
        ],
        "summary": "Find a CurrencyRate by ID",
        "description": "Finds the CurrencyRate with the requested ID and returns it.",
        "operationId": "readCurrencyRate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the CurrencyRate",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "CurrencyRate with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyRateRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "tags": [
          "CurrencyRate"
        ],
        "summary": "Deletes a CurrencyRate by ID",
        "description": "Deletes the CurrencyRate with the requested ID.",
        "operationId": "deleteCurrencyRate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the CurrencyRate",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "CurrencyRate with requested ID was deleted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "patch": {
        "tags": [
          "CurrencyRate"
        ],
        "summary": "Updates a CurrencyRate",
        "description": "Updates a CurrencyRate and persists changes to storage.",
        "operationId": "updateCurrencyRate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the CurrencyRate",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "CurrencyRate properties to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "currency": {
                    "type": "string"
                  },
                  "rate": {
                    "type": "number",
                    "format": "double"
                  },
                  "bank": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "CurrencyRate updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyRateUpdate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/currency-rates/{id}/bank": {
      "get": {
        "tags": [
          "CurrencyRate"
        ],
        "summary": "Find the attached Bank",
        "description": "Find the attached Bank of the CurrencyRate with the given ID",
        "operationId": "readCurrencyRateBank",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the CurrencyRate",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Bank attached to CurrencyRate with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyRate_BankRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/offers": {
      "get": {
        "tags": [
          "Offer"
        ],
        "summary": "List Offers",
        "description": "List Offers.",
        "operationId": "listOffer",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer",
              "maximum": 255,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result Offer list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OfferList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "tags": [
          "Offer"
        ],
        "summary": "Create a new Offer",
        "description": "Creates a new Offer and persists it to storage.",
        "operationId": "createOffer",
        "requestBody": {
          "description": "Offer to create",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "link": {
                    "type": "string"
                  },
                  "bank": {
                    "type": "integer"
                  }
                },
                "required": [
                  "type",
                  "description",
                  "link",
                  "bank"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Offer created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OfferCreate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/offers/{id}": {
      "get": {
        "tags": [
          "Offer"
        ],
        "summary": "Find a Offer by ID",
        "description": "Finds the Offer with the requested ID and returns it.",
        "operationId": "readOffer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Offer",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Offer with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OfferRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "tags": [
          "Offer"
        ],
        "summary": "Deletes a Offer by ID",
        "description": "Deletes the Offer with the requested ID.",
        "operationId": "deleteOffer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Offer",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Offer with requested ID was deleted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "patch": {
        "tags": [
          "Offer"
        ],
        "summary": "Updates a Offer",
        "description": "Updates a Offer and persists changes to storage.",
        "operationId": "updateOffer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Offer",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Offer properties to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "link": {
                    "type": "string"
                  },
                  "bank": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Offer updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OfferUpdate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/offers/{id}/bank": {
      "get": {
        "tags": [
          "Offer"
        ],
        "summary": "Find the attached Bank",
        "description": "Find the attached Bank of the Offer with the given ID",
        "operationId": "readOfferBank",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Offer",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Bank attached to Offer with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Offer_BankRead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Bank": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "logo_url": {
            "type": "string"
          },
          "currency_rates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrencyRate"
            }
          },
          "offers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Offer"
            }
          }
        },
        "required": [
          "id",
          "name",
          "country"
        ]
      },
      "BankCreate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "logo_url": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "country"
        ]
      },
      "BankList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "logo_url": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "country"
        ]
      },
      "BankRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "logo_url": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "country"
        ]
      },
      "BankUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "logo_url": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "country"
        ]
      },
      "Bank_CurrencyRatesList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "currency": {
            "type": "string"
          },
          "rate": {
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "id",
          "currency",
          "rate"
        ]
      },
      "Bank_OffersList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "type": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "link": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "type",
          "description",
          "link"
        ]
      },
      "CurrencyRate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "currency": {
            "type": "string"
          },
          "rate": {
            "type": "number",
            "format": "double"
          },
          "bank": {
            "$ref": "#/components/schemas/Bank"
          }
        },
        "required": [
          "id",
          "currency",
          "rate",
          "bank"
        ]
      },
      "CurrencyRateCreate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "currency": {
            "type": "string"
          },
          "rate": {
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "id",
          "currency",
          "rate"
        ]
      },
      "CurrencyRateList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "currency": {
            "type": "string"
          },
          "rate": {
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "id",
          "currency",
          "rate"
        ]
      },
      "CurrencyRateRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "currency": {
            "type": "string"
          },
          "rate": {
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "id",
          "currency",
          "rate"
        ]
      },
      "CurrencyRateUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "currency": {
            "type": "string"
          },
          "rate": {
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "id",
          "currency",
          "rate"
        ]
      },
      "CurrencyRate_BankRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "logo_url": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "country"
        ]
      },
      "Offer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "type": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "link": {
            "type": "string"
          },
          "bank": {
            "$ref": "#/components/schemas/Bank"
          }
        },
        "required": [
          "id",
          "type",
          "description",
          "link",
          "bank"
        ]
      },
      "OfferCreate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "type": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "link": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "type",
          "description",
          "link"
        ]
      },
      "OfferList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "type": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "link": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "type",
          "description",
          "link"
        ]
      },
      "OfferRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "type": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "link": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "type",
          "description",
          "link"
        ]
      },
      "OfferUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "type": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "link": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "type",
          "description",
          "link"
        ]
      },
      "Offer_BankRead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "logo_url": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "country"
        ]
      }
    },
    "responses": {
      "400": {
        "description": "invalid input, data invalid",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "status": {
                  "type": "string"
                },
                "errors": {}
              },
              "required": [
                "code",
                "status"
              ]
            }
          }
        }
      },
      "403": {
        "description": "insufficient permissions",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "status": {
                  "type": "string"
                },
                "errors": {}
              },
              "required": [
                "code",
                "status"
              ]
            }
          }
        }
      },
      "404": {
        "description": "resource not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "status": {
                  "type": "string"
                },
                "errors": {}
              },
              "required": [
                "code",
                "status"
              ]
            }
          }
        }
      },
      "409": {
        "description": "conflicting resources",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "status": {
                  "type": "string"
                },
                "errors": {}
              },
              "required": [
                "code",
                "status"
              ]
            }
          }
        }
      },
      "500": {
        "description": "unexpected error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "status": {
                  "type": "string"
                },
                "errors": {}
              },
              "required": [
                "code",
                "status"
              ]
            }
          }
        }
      }
    }
  }
}
